@page "/addClaim"
@using ClaimProcessing.Client.Models
@using System.Text.Json
@inject IJSRuntime JSRuntime;

<h3>Claim Form</h3>

<EditForm EditContext="@editContext" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset" >
    <DataAnnotationsValidator />
    <div class="form-row">
        <label>Claim number</label>
        <InputText @bind-Value="model.ClaimNumber" class="form-control" />
        <ValidationMessage For="@(() => model.ClaimNumber)" />
    </div>
    <div class="form-row">
        <label>Owner type</label>
        <InputText @bind-Value="model.OwnerType" class="form-control" />
        <ValidationMessage For="@(() => model.OwnerType)" />
    </div>
    <div class="form-row">
        <label>Claim type</label>
        <InputText @bind-Value="model.ClaimType" class="form-control" />
        <ValidationMessage For="@(() => model.ClaimType)" />
    </div>
    <div class="form-row">
        <label>Item code</label>
        <InputText @bind-Value="model.ItemCode" class="form-control" />
        <ValidationMessage For="@(() => model.ItemCode)" />
    </div>
    <div class="form-row">
        <label>Quantity</label>
        <InputNumber @bind-Value="model.Qty" class="form-control" />
        <ValidationMessage For="@(() => model.Qty)" />
    </div>
    <div class="form-row">
        <label>Customer name</label>
        <InputText @bind-Value="model.CustomerName" class="form-control" />
        <ValidationMessage For="@(() => model.CustomerName)" />
    </div>
    <div class="form-row">
        <label>Item name</label>
        <InputText @bind-Value="model.ItemName" class="form-control" />
        <ValidationMessage For="@(() => model.ItemName)" />
    </div>
    <div class="form-row">
        <label>Claim description</label>
        <InputText @bind-Value="model.ClaimDescription" class="form-control" />
        <ValidationMessage For="@(() => model.ClaimDescription)" />
    </div>
    <div class="form-row">
        <label>Remarks</label>
        <InputText @bind-Value="model.Remarks" class="form-control" />
        <ValidationMessage For="@(() => model.Remarks)" />
    </div>
    <div class="form-row">
        <label>Claim status</label>
        <InputNumber @bind-Value="model.ClaimStatus" class="form-control" />
        <ValidationMessage For="@(() => model.ClaimStatus)" />
    </div>
    <div class="form-row">
        <label>Supplier Id</label>
        <InputNumber @bind-Value="model.SupplierId" class="form-control" />
        <ValidationMessage For="@(() => model.SupplierId)" />
    </div> 
    <div class="form-row">
        <label>Sale invoice No</label>
        <InputText @bind-Value="model.SaleInvoiceNo" class="form-control" />
        <ValidationMessage For="@(() => model.SaleInvoiceNo)" />
    </div>
    <div class="form-row">
        <label>Sale date</label>
        <InputDate @bind-Value="model.SaleDate" class="form-control" />
        <ValidationMessage For="@(() => model.SaleDate)" />
    </div>
    <div class="form-row">
        <label>Purchase invoice No</label>
        <InputText @bind-Value="model.PurchaseInvoiceNo" class="form-control" />
        <ValidationMessage For="@(() => model.PurchaseInvoiceNo)" />
    </div>
    <div class="form-row">
        <label>Purchase date</label>
        <InputDate @bind-Value="model.PurchaseDate" class="form-control" />
        <ValidationMessage For="@(() => model.PurchaseDate)" />
    </div>
    <div class="form-row">
        <label>Internal document No</label>
        <InputText @bind-Value="model.InternalDocNo" class="form-control" />
        <ValidationMessage For="@(() => model.InternalDocNo)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
    <button type="reset" class="btn btn-warning">Clear</button>
</EditForm>


@code {
    private ClaimsForm model = new();
    private EditContext editContext;
    protected override void OnInitialized()
    {
        editContext = new EditContext(model);
    }

    private void HandleValidSubmit()
    {
        var modelJson = JsonSerializer.Serialize(model, new JsonSerializerOptions { WriteIndented = true });
        JSRuntime.InvokeVoidAsync("alert", $"SUCCESS!! \n\n{modelJson}");
    }

    private void HandleReset()
    {
        model = new ClaimsForm();
        editContext = new EditContext(model);
    }
}
